openapi: 3.0.0
info:
  title: Member API
  version: 1.0.0
  description: API for managing member
paths:
  /members:
    get:
      summary: Returns a list of all members
      description: Use this api to get all members.
      tags:
        - members
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of members
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'get all members'
                  All_members:
                    type: array
                    items:
                      $ref: '#/components/schemas/Members'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /signup:
    post:
      summary: Member sign up
      description: Use this api to sign up.
      tags:
        - members
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberSingUp'
      responses:
        '201':
          description: Member created successfully
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/MemberResponse'
  /signin:
    post:
      summary: Member sign in
      description: Use this api to sign in.
      tags:
        - members
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberSingIn'
      responses:
        '201':
          description: Member Signed in successfully
          content:
            application/json: 
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /logout:
    post:
      summary: Member log out
      description: Use this api to log out.
      tags: 
        - members
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns log out successfully message 
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Logout successfully'
        '401':
          description: Unauthorized
        '404':
          description: Forbidden
        '500':
          description: Internal server error


components:
  securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
  schemas:
    MemberSingUp:
      type: object
      required:
        - userName
        - password
        - email
        - firstName
        - lastName
      properties:
        userName:
          type: string
          example: 'testUserName'
        password:
          type: string
          example: '123456'
        email:
          type: string
          example: 'ec1348@gmail.com'
        firstName:
          type: string
          example: 'eric'
        lastName:
          type: string
          example: 'chen'
    MemberSingIn:
      type: object
      required:
        - userName
        - password
      properties:
        userName:
          type: string
          example: 'testUserName'
        password:
          type: string
          example: '123456'
    Members:
      type: object
      required:
        - userName
        - password
        - email
        - firstName
        - lastName
        - permission_id
        - Permision
      properties:
        id:
          type: integer
        userName:
          type: string
          example: 'username'
        password:
          type: string
        email:
          type: string
          example: 'ec1348@gmail.com'
        firstName:
          type: string
          example: 'eric'
        lastName:
          type: string
          example: 'chen'
        permission_id:
          type: integer
          example: 1
        Permision:
          type: object
          properties:
            name: 
              type: string
              example: admin
    MemberResponse:
      type: object
      required:
        - userName
      properties:
        userName:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
